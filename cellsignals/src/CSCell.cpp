/*
 * Copyright (C) Sandra Sáez Raspeño - All Rights Reserved
 *
 * This file is part of Cellsignals.
 *
 * All information contained in this package is, and remains the property of
 * Sandra Sáez Raspeño. Copy and distribution of CellSignals or any result
 * generated by it is strictly forbidden unless prior written permission is
 * obtained from Sandra Sáez Raspeño.
 */

/**********************************************************************/
/*                                                                    */
/*              CONTINOUS CELL CLASS IMPLEMENTATION                   */
/*                                                                    */
/**********************************************************************/

#include "CSCell.h"

/*********************** Getters and Setters **************************/

std::map<int,double> CSCell::getSignalsMap() {
  return this->local_signals;
}

/*********************** Auxiliary functions *************************/

bool CSCell::_existSignal(int id) {
  return (this->local_signals.find(id) != this->local_signals.end());
}

unsigned int CSCell::_getTimer(int signal_id) {
  return 0;
}

void CSCell::_setTimer(int signal_id, unsigned int time) {}

/******************** Virtual member functions ***********************/

double CSCell::getValue(int signal_id) {
  return this->local_signals[signal_id];
}

void CSCell::setValue(int signal_id, double concentration) {
  this->local_signals[signal_id] = concentration;
}

void CSCell::insertSignal(int signal_id) {
  this->local_signals.insert(std::pair<int,double>(signal_id, 0));
}

void CSCell::deleteSignal(int signal_id) {
  this->local_signals.erase(signal_id);
}

void CSCell::incSignal(int signal_id, double concentration) {
  this->local_signals[signal_id] += concentration;
};

void CSCell::decSignal(int signal_id, double concentration) {
  this->local_signals[signal_id] -= concentration;
}
