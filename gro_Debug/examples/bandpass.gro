//
// gro is protected by the UW OPEN SOURCE LICENSE, which is summarized here.
// Please see the file LICENSE.txt for the complete license.
//
// THE SOFTWARE (AS DEFINED BELOW) AND HARDWARE DESIGNS (AS DEFINED BELOW) IS PROVIDED
// UNDER THE TERMS OF THIS OPEN SOURCE LICENSE (“LICENSE”).  THE SOFTWARE IS PROTECTED
// BY COPYRIGHT AND/OR OTHER APPLICABLE LAW.  ANY USE OF THIS SOFTWARE OTHER THAN AS
// AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
//
// BY EXERCISING ANY RIGHTS TO THE SOFTWARE AND/OR HARDWARE PROVIDED HERE, YOU ACCEPT AND
// AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE.  TO THE EXTENT THIS LICENSE MAY BE
// CONSIDERED A CONTRACT, THE UNIVERSITY OF WASHINGTON (“UW”) GRANTS YOU THE RIGHTS
// CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.
//
// TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//


include gro

set ( "dt", 0.1 );

ahl := signal ( 1, 0.01 ); // args = diffusion rate and degradation rate

fun f a . 0.1 < a & a < 0.6;

program sensor() := {

  rfp := 0.0;

  f ( get_signal ( ahl ) ) : { rfp := rfp + 1 };
  rate ( 0.01 * rfp ) : { rfp := rfp - 1 }

};

program report() := {

  needs rfp;

  selected : { message ( 1,
          "cell "     <> tostring(id)
     <> ": ahl="      <> tostring(get_signal(ahl))
     <> ": rfp/vol="  <> tostring(rfp/volume)
    )
  };

};

set ( "rfp_saturation_max", 50 );
set ( "rfp_saturation_min", 0 );

ecoli ( [ x:= 0, y:= 0 ], program sensor() + report() sharing rfp );

program main() := {

  true : { set_signal ( ahl, 0, 0, 10 ) }

};
