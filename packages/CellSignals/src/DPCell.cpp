/*
 * Copyright (C) Sandra Sáez Raspeño - All Rights Reserved
 *
 * This file is part of Cellsignals.
 *
 * All information contained in this package is, and remains the property of
 * Sandra Sáez Raspeño. Copy and distribution of CellSignals or any result
 * generated by it is strictly forbidden unless prior written permission is
 * obtained from Sandra Sáez Raspeño.
 */

/**********************************************************************/
/*                                                                    */
/*         DIGITAL PROPORTIONAL CELL CLASS IMPLEMENTATION             */
/*                                                                    */
/**********************************************************************/

#include "DPCell.h"

/*********************** Getters and Setters **************************/

std::map<int,bool> DPCell::getSignalsMap() {
  return this->local_signals;
}

int DPCell::getProportion() {
  return this->proportion;
}

void DPCell::setProportion(int prop) {
  this->proportion = prop;
}

/*********************** Auxiliary functions *************************/

bool DPCell::_existSignal(int id) {
  return (this->local_signals.find(id) != this->local_signals.end());
}

/******************** Virtual member functions ***********************/

double DPCell::getValue(int signal_id) {
  return this->local_signals[signal_id];
}

void DPCell::setValue(int signal_id, double concentration) {
  this->local_signals[signal_id] = ((bool) concentration);
}

void DPCell::insertSignal(int signal_id) {
  this->local_signals.insert(std::pair<int,bool>(signal_id, 1));
}

void DPCell::deleteSignal(int signal_id) {
  this->local_signals.erase(signal_id);
}

void DPCell::incSignal(int signal_id, double concentration) {
  this->local_signals[signal_id] = 1;
};

void DPCell::decSignal(int signal_id, double concentration) {
  this->local_signals[signal_id] = 0;
}
